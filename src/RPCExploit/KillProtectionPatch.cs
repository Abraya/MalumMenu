using HarmonyLib;
using Hazel;
using InnerNet;
using UnityEngine;

namespace MalumMenu;

[HarmonyPatch(typeof(PlayerPhysics), nameof(PlayerPhysics.LateUpdate))]
public static class RPC_KillProtectionPostfix
{
    private static bool protectionEnabled = false; // Flag to track protection status

    public static void Postfix(PlayerPhysics __instance)
    {
        if (CheatSettings.killProtection && PlayerControl.LocalPlayer.protectedByGuardianId == -1)
        {
            if (!protectionEnabled) // Check if protection has not been enabled yet
            {
                var HostData = AmongUsClient.Instance.GetHost();
                if (HostData != null && !HostData.Character.Data.Disconnected)
                {
                    foreach (var item in PlayerControl.AllPlayerControls)
                    {
                        MessageWriter messageWriter = AmongUsClient.Instance.StartRpcImmediately(PlayerControl.LocalPlayer.NetId, (byte)RpcCalls.ProtectPlayer, SendOption.None, AmongUsClient.Instance.GetClientIdFromCharacter(item));
                        messageWriter.WriteNetObject(PlayerControl.LocalPlayer);
                        messageWriter.Write(PlayerControl.LocalPlayer.cosmetics.ColorId);
                        AmongUsClient.Instance.FinishRpcImmediately(messageWriter);
                    }
                    protectionEnabled = true; // Set the flag to true after enabling protection
                }
            }
        }
        else
        {
            protectionEnabled = false; // Reset the flag when protection settings are off or protection is active
        }
    }
}
